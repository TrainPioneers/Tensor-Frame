name: Release on Version Change

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(grep '^version =' Cargo.toml | head -n1 | sed 's/.*"\(.*\)".*/\1/')
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest release version
        id: get_latest_release
        run: |
          LATEST=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "none")
          echo "Latest release: $LATEST"
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if version changed
        id: check_version
        run: |
          if [ "${{ steps.get_version.outputs.version }}" = "${{ steps.get_latest_release.outputs.latest }}" ]; then
            echo "No version change. Skipping release."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed. Proceeding with release."
            echo "changed=true" >> $GITHUB_OUTPUT

      - name: Publish to crates.io
        if: steps.check_version.outputs.changed == 'true'
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Create GitHub Release
        if: steps.check_version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
